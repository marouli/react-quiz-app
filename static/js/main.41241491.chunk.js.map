{"version":3,"sources":["components/Header.js","db/index.js","components/QuizBoard/Question.js","components/QuizBoard/Result.js","components/QuizBoard/QuizBoard.js","App.js","serviceWorker.js","index.js","images/amsterdam-silhouette.png"],"names":["StyledHeader","styled","header","Header","src","logo","alt","db","question","answers","correct","questionId","n","Promise","resolve","sort","Math","random","slice","StyledBox","section","QuestionBox","options","selected","useState","answer","setAnswer","className","map","text","i","key","onClick","StyledResult","Result","score","reset","StyledBoard","main","QuizBoard","state","questionList","responses","getQuestions","then","setState","resetQuiz","correctAnswer","this","length","Question","computeAnswer","Component","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.41241491.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../images/amsterdam-silhouette.png';\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  background-color: #ffc44f;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  h1 {\n    width: 100%;\n    margin-top: 56px;\n    padding: 10px 0 14px 22px;\n    color: #fff;\n    font-size: 1.8rem;\n    font-weight: normal;\n  }\n\n  img {\n    margin: 24px 14px 24px 60px;\n    width: 145px;\n    filter: drop-shadow(5px 5px 5px #fff);\n  }\n`;\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <img src={logo} alt='amsterdam-logo' />\n      <h1>How well do you know Amsterdam? Take the quiz and find out!</h1>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","const db = [\n    {\n      question: \"The Royal Palace in the centre of Amsterdam is located on what big square?\",\n      answers: [\"Rembrandtsplein\", \"Dam\", \"Munt\", \"Leidseplein\"],\n      correct: \"Dam\",\n      questionId: \"099099\"\n    },\n    {\n      question:\n        'The biggest museum in Amsterdam, and home of many famous paintings by Rembrandt, is called?',\n      answers: [\"Rijksmuseum\", \"Stedelijk Museum\", \"Van Gogh Museum\", \"Hermitage Amsterdam\"],\n      correct: \"Rijksmuseum\",\n      questionId: \"183452\"\n    },\n    {\n      question:\n        \"The official nickname for Amsterdam?\",\n      answers: [\"Coffeeshop City\", \"Venice Of The North\", \"Best of the Rest\", \"Greatest of the Little Big Towns\"],\n      correct: \"Venice Of The North\",\n      questionId: \"267908\"\n    },\n    {\n      question: \"The Olympic Games took place in Amsterdam in what year?\",\n      answers: [\"1932\", \"1928\", \"1936\", \"1922\"],\n      correct: \"1928\",\n      questionId: \"333247\"\n    },\n    {\n      question: \"The highest building in Amsterdam is named after a famous Dutch painter. What is the name of this building?\",\n      answers: [\"Klashorst Tower\", \"Van Gogh Tower\", \"Rembrandt Tower\", \"Vermeer Tower\"],\n      correct: \"Rembrandt Tower\",\n      questionId: \"496293\"\n    },\n    {\n      question:\n        \"Which of these is one of the main tourist attractions in Amsterdam?\",\n      answers: [\n        \"The Green Light District\",\n        \"The Purple Light District\",\n        \"The Orange Light District\",\n        \"The Red Light District\"\n      ],\n      correct: \"The Red Light District\",\n      questionId: \"588909\"\n    },\n    {\n      question: 'The most famous sports club in Amsterdam, which is really known worldwide, is called?',\n      answers: [\"Feijenoord\", \"PSV\", \"Vitesse\", \"Ajax\"],\n      correct: \"Ajax\",\n      questionId: \"648452\"\n    },\n    {\n      question: \"The big river that runs through the city is called?\",\n      answers: [\"Noordzeekanaal\", \"Ijssel\", \"Amstel\", \"Boerenwetering\"],\n      correct: \"Amstel\",\n      questionId: \"786649\"\n    },\n    {\n      question: \"What was the name of the Amsterdam American Football team that played in the Amsterdam Arena?\",\n      answers: [\"Amsterdam Angels\", \"Amsterdam Attractions\", \"Amsterdam Animals\", \"Amsterdam Admirals\"],\n      correct: \"Amsterdam Admirals\",\n      questionId: \"839754\"\n    },\n    {\n      question: \"What is the name of the most important railway station in Amsterdam?\",\n      answers: [\n        \"Amstel Station\",\n        \"Bijlmer Station\",\n        \"Muiderpoort Station\",\n        \"Central Station\"\n      ],\n      correct: \"Central Station\",\n      questionId: \"98390\"\n    },\n    {\n      question: \"Amsterdam hosted what big sports-event in 1998?\",\n      answers: [\"World Championship Speed Skating\", \"Olympic Games For Students\", \"European Championship Bowling\", \"The Gay Games\"],\n      correct: \"The Gay Games\",\n      questionId: \"1071006\"\n    },\n    {\n      question: \"Amsterdam was founded as which type of community in the thirteenth century?\",\n      answers: [\"Fishing Village\", \"Farming Community\", \"Artist Community\", \"Merchants village\"],\n      correct: \"Fishing Village\",\n      questionId: \"1174154\"\n    },\n    {\n      question: \"What is the city code for Amsterdam\",\n      answers: [\"1\", \"15\", \"88\", \"20\"],\n      correct: \"20\",\n      questionId: \"1226535\"\n    },\n    {\n      question: \"What is the emergency number to call for the police, fire department, and ambulance in Amsterdam?\",\n      answers: [\"199\", \"112\", \"100\", \"166\"],\n      correct: \"112\",\n      questionId: \"1310938\"\n    },\n    {\n      question: \"In what year did the Netherlands decriminalize possession of soft drugs such as cannabis?\",\n      answers: [\"1990\", \"1969\", \"1985\", \"1976\"],\n      correct: \"1976\",\n      questionId: \"1436873\"\n    },\n    {\n      question: \"What is located at 263 Prinsengracht in Amsterdam?\",\n      answers: [\"Anne Frank House\", \"Rembrandt House Museum\", \"Van Gogh Museum\", \"Westerpoort\"],\n      correct: \"Anne Frank House\",\n      questionId: \"1515110\"\n    },\n    {\n      question: \"What is Koninginnedag?\",\n      answers: [\"Cannabis Competition\", \"International Music Festival\", \"Queen's Day\", \"Gay Pride Weekend\"],\n      correct: \"Queen's Day\",\n      questionId: \"1642728\"\n    },\n    {\n      question: \"What is the common name of the Amsterdam version of Gothic architecture?\",\n      answers: [\"Flat Style\", \"Dutch Classicism\", \"Louis Style\", \"Polder Gothic\"],\n      correct: \"Polder Gothic\",\n      questionId: \"1747256\"\n    },\n    {\n      question: \"Where is the Red Light District in Amsterdam?\",\n      answers: [\"De Wallen\", \"Amsterdam West\", \"Rembrandtplein\", \"Leidseplein\"],\n      correct: \"De Wallen\",\n      questionId: \"1822532\"\n    },\n    {\n      question: \"How many canals are in Amsterdam?\",\n      answers: [\"1200\", \"1000\", \"160\", \"45\"],\n      correct: \"160\",\n      questionId: \"195075\"\n    },\n    {\n      question: 'What is the Snoga in Amsterdam?',\n      answers: [\"Museum\", \"Jewish Synagogue\", \"Lighthouse\", \"Canal\"],\n      correct: \"Jewish Synagogue\",\n      questionId: \"2019778\"\n    }\n  ];\n  \n  export default (n = 5) =>\n    Promise.resolve(db.sort(() => 0.5 - Math.random()).slice(0, n));\n  ","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledBox = styled.section`\n  padding: 15px;\n\n  .question {\n    margin: 0;\n    font-size: 22px;\n    font-weight: 400;\n  }\n\n  button {\n    margin: 12px 22px 16px 0;\n    padding: 5px 12px 5px 12px;\n    font-size: 16px;\n    color: #fff;\n    background-color: #ff4db3;\n    border: none;\n    border-radius: 5px;\n  }\n`;\n\nconst QuestionBox = ({ question, options, selected }) => {\n  const [answer, setAnswer] = useState(options);\n  return (\n    <StyledBox>\n      <h3 className='question'>{question}</h3>\n      {answer.map((text, i) => (\n        <button\n          key={i}\n          className='answerBtn'\n          onClick={() => {\n            setAnswer([text]);\n            selected(text);\n          }}\n        >\n          {text}\n        </button>\n      ))}\n    </StyledBox>\n  );\n};\n\nexport default QuestionBox;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledResult = styled.section`\n  button {\n    margin-top: 12px;\n    margin-right: 15px;\n    padding: 5px 12px 5px 12px;\n    font-size: 18px;\n    color: #fff;\n    background-color: #4da6ff;\n    border: none;\n    border-radius: 5px;\n  }\n`;\n\nconst Result = ({ score, reset }) => {\n  return (\n    <StyledResult>\n      <div className='score'>You scored {score} / 5 correct answers!</div>\n      <button className='playBtn' onClick={reset}>\n        Play again!\n      </button>\n    </StyledResult>\n  );\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport db from '../../db';\nimport Question from './Question';\nimport Result from './Result';\n\nconst StyledBoard = styled.main`\n  margin: auto;\n  width: 70%;\n  margin-top: 60px;\n  padding: 35px;\n  background-color: #f2f3f4;\n  border-radius: 5px;\n  box-shadow: 0 0 8px #d5d8dc;\n`;\n\nclass QuizBoard extends Component {\n  state = {\n    questionList: [],\n    score: 0,\n    responses: 0,\n  };\n\n  getQuestions = () => {\n    db().then((question) => {\n      this.setState({\n        questionList: question,\n      });\n    });\n  };\n\n  computeAnswer(answer, correctAnswer) {\n    if (answer === correctAnswer) {\n      this.setState({\n        score: this.state.score + 1,\n      });\n    }\n    this.setState({\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5,\n    });\n  }\n\n  resetQuiz = () => {\n    this.getQuestions();\n    this.setState({\n      score: 0,\n      responses: 0,\n    });\n  };\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return (\n      <StyledBoard>\n        {this.state.questionList.length > 0 &&\n          this.state.responses < 5 &&\n          this.state.questionList.map(\n            ({ question, answers, correct, questionId }) => (\n              <Question\n                key={questionId}\n                question={question}\n                options={answers}\n                selected={(answer) => this.computeAnswer(answer, correct)}\n              />\n            )\n          )}\n        {this.state.responses === 5 ? (\n          <Result score={this.state.score} reset={this.resetQuiz} />\n        ) : null}\n      </StyledBoard>\n    );\n  }\n}\n\nexport default QuizBoard;\n","import React from 'react';\nimport { createGlobalStyle } from \"styled-components\";\nimport Header from './components/Header';\nimport QuizBoard from './components/QuizBoard/QuizBoard';\n// import './App.css';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    color: #1b2c4b;\n    @import url('https://fonts.googleapis.com/css?family=Roboto+Slab:300,400,700&display=swap');\n    font-family: 'Roboto Slab', serif;\n  }\n`;\n\nconst App = () => {\n  \n  return <>\n      <GlobalStyle />\n      <Header />\n      <QuizBoard />\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/amsterdam-silhouette.a60cf4fb.png\";"],"sourceRoot":""}